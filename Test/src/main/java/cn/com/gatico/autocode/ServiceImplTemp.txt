package ${packageName}.service.impl;

import ${packageName}.bean.${ClassName}Bean;
import ${packageName}.dao.${ClassName}Dao;
import ${packageName}.entity.${ClassName}Entity;
import ${packageName}.service.${ClassName}Service;
import ${packageName}.vo.${ClassName}Vo;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;

import java.util.List;

@Service
@Transactional(propagation = Propagation.REQUIRED, readOnly = true)
public class ${ClassName}ServiceImpl implements ${ClassName}Service{

    @Autowired
    private ${ClassName}Dao ${className}Dao;

    @Override
    public List<${ClassName}Vo> list${ClassName}() {
        return ${className}Dao.findAll().stream().map(${className}Entity -> {
            ${ClassName}Vo ${className}Vo = new ${ClassName}Vo();

            return ${className}Vo;
        }).collect(Collectors.toList());
    }

    @Override
    @Transactional(propagation = Propagation.REQUIRED, readOnly = false)
    public void add${ClassName}(${ClassName}Bean ${className}Bean) {

    }

    @Override
    @Transactional(propagation = Propagation.REQUIRED, readOnly = false)
    public void modify${ClassName}(${ClassName}Bean ${className}Bean) {

    }

    @Override
    @Transactional(propagation = Propagation.REQUIRED, readOnly = false)
    public void remove${ClassName}(long id) {
        ${ClassName}Entity ${className}Entity = ${className}Dao.findOne(id);
        if(${className}Entity != null){
            ${className}Dao.delete(${className}Entity);
        }
    }

}